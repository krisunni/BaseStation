{"ts":1390270382766,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var server= require (\"./server\");\nvar router = require(\"./router\");\n\nserver.start(router.route);\n"]],"start1":0,"start2":0,"length1":0,"length2":97}]],"length":97}
{"contributors":[],"silentsave":false,"ts":1390270395661,"patch":[[{"diffs":[[0,"r server"],[1," "],[0,"= requir"]],"start1":2,"start2":2,"length1":16,"length2":17},{"diffs":[[0," require"],[-1," "],[0,"(\"./serv"]],"start1":12,"start2":12,"length1":17,"length2":16},{"diffs":[[0,"erver\");"],[1,"\r"],[0,"\nvar rou"]],"start1":25,"start2":25,"length1":16,"length2":17},{"diffs":[[0,"oute"],[-1,"r\");\n"],[1,"\");\r\nvar requestHandlers = require(\"./requestHandlers\");\r\n\r\nvar debug = false;\r\n\r\nvar handle = {}\r\nhandle[\"/\"] = requestHandlers.sendInterface;\r\nhandle[\"/interface\"] = requestHandlers.sendInterface;\r\n\r"],[0,"\nser"]],"start1":60,"start2":60,"length1":13,"length2":209},{"diffs":[[0,"oute"],[1,",handle,debug"],[0,");"],[-1,"\n"]],"start1":287,"start2":287,"length1":7,"length2":19}]],"length":306,"saved":false}
{"contributors":[],"silentsave":false,"ts":1390330473108,"patch":[[{"diffs":[[0,"erver\");"],[-1,"\r"],[0,"\nvar rou"]],"start1":25,"start2":25,"length1":17,"length2":16},{"diffs":[[0,"e\");"],[-1,"\r\nvar requestHandlers = require(\"./requestHandlers\");\r\n\r\nvar debug = false;\r\n\r\nvar handle = {}\r\nhandle[\"/\"] = requestHandlers.sendInterface;\r\nhandle[\"/interface\"] = requestHandlers.sendInterface;\r\n\r"],[1,"\n"],[0,"\nser"]],"start1":62,"start2":62,"length1":206,"length2":9},{"diffs":[[0,"oute"],[-1,",handle,debug"],[0,");"]],"start1":89,"start2":89,"length1":19,"length2":6}]],"length":95,"saved":false}
{"ts":1390330490861,"patch":[[{"diffs":[[0,"rt(route"],[-1,"r"],[0,".route);"]],"start1":78,"start2":78,"length1":17,"length2":16}]],"length":94,"saved":false}
{"contributors":[],"silentsave":false,"ts":1390402163017,"patch":[[{"diffs":[[0,".route);"],[1,"\n\n/*\n\nvar http = require(\"http\");\nfunction start() {\n  function onRequest(request, response) {\n    console.log(\"Request received.\");\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    SerialRead();\n response.write(\"Hello World\");\n    response.end();\n  }\n\n  http.createServer(onRequest).listen(8888);\n  console.log(\"Server has started.\");\n}\n\nexports.start = start;\n\n/*"]],"start1":86,"start2":86,"length1":8,"length2":389}]],"length":475,"saved":false}

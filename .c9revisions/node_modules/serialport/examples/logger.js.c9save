{"ts":1390358132824,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\n  Simple example that takes a command line provided serial port destination and routes the output to a file of the same name with .log appended to the port name.\n  \n  usage: node logger.js /dev/tty.usbserial <baudrate>\n  \n*/\n\nvar SerialPort = require(\"serialport\");\nvar fs = require(\"fs\");\nvar port = process.argv[2];\nvar baudrate = process.argv[3];\nvar active = false;\n\nfunction attemptLogging(fd, port, baudrate) {\n  if (!active) {\n    fs.stat(port,  function (err, stats) {\n      if (!err) {\n        active = true;\n        \n        var serialPort = new SerialPort.SerialPort(port, {\n          baudrate: baudrate\n        });\n        fs.write(fd, \"\\n------------------------------------------------------------\\nOpening SerialPort: \"+target+\" at \"+Date.now()+\"\\n------------------------------------------------------------\\n\");  \n        serialPort.on(\"data\", function (data) {\n          fs.write(fd, data.toString());\n        });\n        serialPort.on(\"close\", function (data) {\n          active = false;\n          fs.write(fd, \"\\n------------------------------------------------------------\\nClosing SerialPort: \"+target+\" at \"+Date.now()+\"\\n------------------------------------------------------------\\n\");  \n        });\n      }\n    });\n  }\n}\n\nif (!port) {\n  console.log(\"You must specify a serial port location.\");\n} else {\n  var target = port.split(\"/\");\n  target = target[target.length-1]+\".log\";\n  if (!baudrate) {\n    baudrate = 115200;\n  }\n  fs.open(\"./\"+target, 'w', function (err, fd) {\n    setInterval(function () {\n      if (!active) {\n        try {\n          attemptLogging(fd, port, baudrate);  \n        } catch (e) {\n          // Error means port is not available for listening.\n          active = false;\n        }\n      }\n    }, 1000);\n  });\n}\n\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1767}]],"length":1767}

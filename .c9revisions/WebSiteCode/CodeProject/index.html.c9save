{"ts":1390514493969,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1390514496408,"patch":[[{"diffs":[[1,"<!DOCTYPE HTML>\n <html>\n   <head>    \n    <link rel=\"stylesheet\" href=\"http://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css\" />\n    <style>\n\tbody {\n\t\tmargin: 0px;\n\t\tpadding: 0px;\n        }\n\t#rData{\n\t\tfloat:left;\n\t\tmargin-left:100px;\n\t\tmargin-right:auto;\n\t\twidth:470px;\n\t}\n\t#sData{\n\t\tfloat: left;\n\t\tmargin-left:100px;\n\t\tmargin-right:auto;\n\t\twidth:470px;\n\t}\n\th2{\n\t\ttext-align:center;\n\t}\n        #myCanvas {\n\t\tborder: 2px dashed grey;\n        }\n\t#btnHolder, #sliderTxt{\n\ttext-align:center;\n\t}\n    </style>\n        <script src=\"http://code.jquery.com/jquery-1.8.3.js\"></script>\n\t<script src=\"http://code.jquery.com/ui/1.9.2/jquery-ui.js\"></script>\n\t<script src=\"/socket.io/socket.io.js\"></script>\n    <script>\n\t// canvas request for all browsers\n\twindow.requestAnimFrame = (function(callback) {\n        return window.requestAnimationFrame || \n        window.webkitRequestAnimationFrame || \n        window.mozRequestAnimationFrame || \n        window.oRequestAnimationFrame || \n        window.msRequestAnimationFrame ||\n        function(callback) {\n          window.setTimeout(callback, 1000 / 30); // 30 frames per second\n\t  };\n\t})();\n\t  \n\tvar iosocket;\n\tvar pollOneH = 0;\n\tvar poll1;\n\tvar text;\n\tvar potValue;\n\tvar prevPotValue;\n\t//var onOff = false; \n\tvar toggleVal = 0;\n\t  \n\tfunction animation(poll1,text)\n\t{\n\t  var canvas = document.getElementById(\"myCanvas\");\n          var content = canvas.getContext(\"2d\");\n\t\t\t\n\t  // clear canvas\n\t  content.clearRect(0, 0, 460, 540);\n\t  \n\t  content.fillStyle = 'black';\n\t  content.textAlign = 'center';\n\t  content.font = '20pt Calibri';\n\t  \n\t  // make the wobbely values stop \n\t  if(pollOneH*2 > prevPotValue+2 || pollOneH*2 < prevPotValue-2){\n\t\tprevPotValue = potValue;\n\t\tpotValue = pollOneH*2;\n\t  }\n\n\t  content.fillText('Potmeter value: ' + potValue, text.x, text.y);\n\n          // render graph \n\t  content.fillStyle = 'orange';\n\t  content.fillRect(poll1.x,(poll1.y-poll1.h),poll1.w,poll1.h);\n\t\t\t\t\t\t\n\t  content.fill();\n\n\t  // request new frame\n\t  requestAnimFrame(function() {\n\t  \n\t  if(poll1.h < pollOneH){\n\t\tpoll1.h += (pollOneH - poll1.h)*.15;\n\t  }\n\t  else if(poll1.h > pollOneH){\n\t\tpoll1.h -= (poll1.h - pollOneH)*.15;\n\t  }\n\t  text.y = (poll1.y - poll1.h) - 5;\n\t  animation(poll1,text);\n\t });\n\t}\n\t  \n\tfunction initSocketIO()\n\t{\n\t\tiosocket = io.connect();\n\t\tiosocket.on('onconnection', function(value) {\n\t\tpollOneH = value.pollOneValue/2; // recieve start poll value from server\n\t\tinitPoll();\n\t\tinitButton();\n\t\tinitSlider();\n\t\t\t\t\n\t\t// recieve changed values by other client from server\n\t\tiosocket.on('updateData', function (recievedData) {\n\t\t\tpollOneH = recievedData.pollOneValue/2; // recieve start poll value from server\n\t\t});\n\t    });\n\t}\n\t  \n\tfunction initPoll()\n\t{\n\t   poll1 = {\n\t\tx: 10,\n\t\ty: 540,\n\t\tw: 440,\n\t\th: 0\n\t   }\n\t   text = {\n\t\tx:poll1.w/2,\n\t\ty:100\n\t   }\n\t   potValue = pollOneH*2;\n\t   prevPotValue = potValue;\n\t   animation(poll1,text);\n\t}\n\t\n\tfunction initButton()\n\t{\n\t   $( \"#check\" ).button();\n\t}\n\t\n\tfunction initSlider()\n\t{\n\t     $( \"#slider\" ).slider({\n\t     min:0,\n\t     max:255,\n\t     change: function(event,ui) {\n\t        iosocket.emit('sliderval',ui.value);\n\t        }\n\t     });\n\t}\n\t\n\twindow.onload = function() {\n\t     initSocketIO();\n        };\n      \n      $(document).ready(function() {\n        $('#check').click(function() {\n            toggleVal += 1;\n\t    toggleVal %= 2;\n\t    iosocket.emit('buttonval',toggleVal);\n\t });\n\t});\n    </script>\n  </head>\n  <body>\n   <div id=\"rData\">\n\t<h2>Data from Arduino</h2>\n    <canvas id=\"myCanvas\" width=\"460\" height=\"540\"></canvas>\n   </div>\n       <div id=\"sData\">\n\t<h2>Data to Arduino</h2>\n\t<div id=\"btnHolder\">\n\t  <input type=\"checkbox\" id=\"check\" value=\"toggle\"/><label for=\"check\">Toggle LED</label>\n\t</div>\n\t<p id=\"sliderTxt\">LED Dimmer</p>\n\t<div id=\"slider\"></div>\n   </div> \n  </body>\n</html>"]],"start1":0,"start2":0,"length1":0,"length2":3810}]],"length":3810,"saved":false}
{"contributors":[],"silentsave":false,"ts":1390514594953,"patch":[[{"diffs":[[0,"ket.on('"],[-1,"on"],[0,"connecti"]],"start1":2309,"start2":2309,"length1":18,"length2":16}]],"length":3808,"saved":false}
